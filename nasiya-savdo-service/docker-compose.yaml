version: '3.9'

services:

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - "2182:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   networks:
  #     - mynetwork

  # kafka:
  #   image: wurstmeister/kafka
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_ADVERTISED_PORT: 9092
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   networks:
  #     - mynetwork

  # migrate
  migrate:
    image: migrate/migrate
    networks:
      - mynetwork
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database",  
                "postgres://postgres:1234@postgres-nasiya:5432/nasia?sslmode=disable", 
                "up" ]
    depends_on:
      - postgres-db

  # postgres
  postgres-db:
    container_name: postgres-nasiya
    image: postgres:latest
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
      POSTGRES_DB: nasia
    volumes:
      - db:/post-database/post-memory
    ports:
      - "5436:5432"
    networks:
      - mynetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5


  # nasiya-service
  nasiya-service:
    container_name: nasiya-service
    build: .
    ports:
      - "3003:3003"
    depends_on:
      - postgres-db
    networks:
      - mynetwork

networks:
  mynetwork:
    external: true
    name: nasiya-network
    driver: bridge

volumes:
  db:
  minio-data:


