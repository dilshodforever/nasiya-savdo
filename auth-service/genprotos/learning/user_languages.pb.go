// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.12.4
// source: user_languages.proto

package learning

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LanguageCode     string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	ProficiencyLevel string `protobuf:"bytes,4,opt,name=proficiency_level,json=proficiencyLevel,proto3" json:"proficiency_level,omitempty"`
	StartedAt        string `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
}

func (x *UserLanguage) Reset() {
	*x = UserLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_languages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLanguage) ProtoMessage() {}

func (x *UserLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_user_languages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLanguage.ProtoReflect.Descriptor instead.
func (*UserLanguage) Descriptor() ([]byte, []int) {
	return file_user_languages_proto_rawDescGZIP(), []int{0}
}

func (x *UserLanguage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserLanguage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserLanguage) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *UserLanguage) GetProficiencyLevel() string {
	if x != nil {
		return x.ProficiencyLevel
	}
	return ""
}

func (x *UserLanguage) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

type UserLanguageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LanguageCode     string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	ProficiencyLevel string `protobuf:"bytes,3,opt,name=proficiency_level,json=proficiencyLevel,proto3" json:"proficiency_level,omitempty"`
	StartedAt        string `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
}

func (x *UserLanguageReq) Reset() {
	*x = UserLanguageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_languages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLanguageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLanguageReq) ProtoMessage() {}

func (x *UserLanguageReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_languages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLanguageReq.ProtoReflect.Descriptor instead.
func (*UserLanguageReq) Descriptor() ([]byte, []int) {
	return file_user_languages_proto_rawDescGZIP(), []int{1}
}

func (x *UserLanguageReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserLanguageReq) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *UserLanguageReq) GetProficiencyLevel() string {
	if x != nil {
		return x.ProficiencyLevel
	}
	return ""
}

func (x *UserLanguageReq) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

type UserLanguageFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LanguageCode     string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	ProficiencyLevel string `protobuf:"bytes,3,opt,name=proficiency_level,json=proficiencyLevel,proto3" json:"proficiency_level,omitempty"`
	StartedAt        string `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Limit            int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset           int32  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *UserLanguageFilter) Reset() {
	*x = UserLanguageFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_languages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLanguageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLanguageFilter) ProtoMessage() {}

func (x *UserLanguageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_user_languages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLanguageFilter.ProtoReflect.Descriptor instead.
func (*UserLanguageFilter) Descriptor() ([]byte, []int) {
	return file_user_languages_proto_rawDescGZIP(), []int{2}
}

func (x *UserLanguageFilter) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserLanguageFilter) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *UserLanguageFilter) GetProficiencyLevel() string {
	if x != nil {
		return x.ProficiencyLevel
	}
	return ""
}

func (x *UserLanguageFilter) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *UserLanguageFilter) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *UserLanguageFilter) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type AllUserLanguages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserLanguages []*UserLanguage `protobuf:"bytes,1,rep,name=user_languages,json=userLanguages,proto3" json:"user_languages,omitempty"`
	Count         int32           `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AllUserLanguages) Reset() {
	*x = AllUserLanguages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_languages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllUserLanguages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllUserLanguages) ProtoMessage() {}

func (x *AllUserLanguages) ProtoReflect() protoreflect.Message {
	mi := &file_user_languages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllUserLanguages.ProtoReflect.Descriptor instead.
func (*AllUserLanguages) Descriptor() ([]byte, []int) {
	return file_user_languages_proto_rawDescGZIP(), []int{3}
}

func (x *AllUserLanguages) GetUserLanguages() []*UserLanguage {
	if x != nil {
		return x.UserLanguages
	}
	return nil
}

func (x *AllUserLanguages) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_user_languages_proto protoreflect.FileDescriptor

var file_user_languages_proto_rawDesc = []byte{
	0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x0d, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x63, 0x69, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcc,
	0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6d, 0x0a,
	0x10, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x43, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xc0, 0x02, 0x0a,
	0x13, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x0d, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e, 0x42, 0x79,
	0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0d,
	0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x1c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x20, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x6c, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x00, 0x42,
	0x14, 0x5a, 0x12, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_languages_proto_rawDescOnce sync.Once
	file_user_languages_proto_rawDescData = file_user_languages_proto_rawDesc
)

func file_user_languages_proto_rawDescGZIP() []byte {
	file_user_languages_proto_rawDescOnce.Do(func() {
		file_user_languages_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_languages_proto_rawDescData)
	})
	return file_user_languages_proto_rawDescData
}

var file_user_languages_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_user_languages_proto_goTypes = []interface{}{
	(*UserLanguage)(nil),       // 0: user_languages.UserLanguage
	(*UserLanguageReq)(nil),    // 1: user_languages.UserLanguageReq
	(*UserLanguageFilter)(nil), // 2: user_languages.UserLanguageFilter
	(*AllUserLanguages)(nil),   // 3: user_languages.AllUserLanguages
	(*ById)(nil),               // 4: lessons.ById
	(*Void)(nil),               // 5: lessons.Void
}
var file_user_languages_proto_depIdxs = []int32{
	0, // 0: user_languages.AllUserLanguages.user_languages:type_name -> user_languages.UserLanguage
	1, // 1: user_languages.UserLanguageService.Create:input_type -> user_languages.UserLanguageReq
	0, // 2: user_languages.UserLanguageService.Update:input_type -> user_languages.UserLanguage
	4, // 3: user_languages.UserLanguageService.Delete:input_type -> lessons.ById
	4, // 4: user_languages.UserLanguageService.GetById:input_type -> lessons.ById
	2, // 5: user_languages.UserLanguageService.GetAll:input_type -> user_languages.UserLanguageFilter
	5, // 6: user_languages.UserLanguageService.Create:output_type -> lessons.Void
	5, // 7: user_languages.UserLanguageService.Update:output_type -> lessons.Void
	5, // 8: user_languages.UserLanguageService.Delete:output_type -> lessons.Void
	0, // 9: user_languages.UserLanguageService.GetById:output_type -> user_languages.UserLanguage
	3, // 10: user_languages.UserLanguageService.GetAll:output_type -> user_languages.AllUserLanguages
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_user_languages_proto_init() }
func file_user_languages_proto_init() {
	if File_user_languages_proto != nil {
		return
	}
	file_lessons_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_languages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_languages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLanguageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_languages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLanguageFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_languages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllUserLanguages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_languages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_languages_proto_goTypes,
		DependencyIndexes: file_user_languages_proto_depIdxs,
		MessageInfos:      file_user_languages_proto_msgTypes,
	}.Build()
	File_user_languages_proto = out.File
	file_user_languages_proto_rawDesc = nil
	file_user_languages_proto_goTypes = nil
	file_user_languages_proto_depIdxs = nil
}
