basePath: /
definitions:
  genprotos.ContractResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  genprotos.CreateContractRequestSwagger:
    properties:
      consumer_address:
        type: string
      consumer_name:
        type: string
      consumer_passport_serial:
        type: string
      consumer_phone_number:
        type: string
      duration:
        type: integer
      passport_image:
        type: string
    type: object
  genprotos.CreateExchangeRequestSwagger:
    properties:
      amount:
        type: integer
      contract_id:
        type: string
      price:
        type: number
      product_id:
        type: string
    type: object
  genprotos.CreateProductRequestSwagger:
    properties:
      color:
        type: string
      date_of_creation:
        type: string
      image_url:
        type: string
      made_in:
        type: string
      model:
        type: string
      name:
        type: string
    type: object
  genprotos.CreateTransactionRequestSwagger:
    properties:
      contract_id:
        type: string
      price:
        type: number
    type: object
  genprotos.ExchangeResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  genprotos.GetAllContractResponse:
    properties:
      all_contracts:
        items:
          $ref: '#/definitions/genprotos.GetContractResponse'
        type: array
      count:
        type: integer
      message:
        type: string
    type: object
  genprotos.GetAllExchangeResponse:
    properties:
      all_exchanges:
        items:
          $ref: '#/definitions/genprotos.GetExchangeResponse'
        type: array
      count:
        type: integer
      message:
        type: string
    type: object
  genprotos.GetAllProductResponse:
    properties:
      all_products:
        items:
          $ref: '#/definitions/genprotos.GetProductResponse'
        type: array
      count:
        type: integer
      message:
        type: string
    type: object
  genprotos.GetAllTransactionResponse:
    properties:
      all_transactions:
        items:
          $ref: '#/definitions/genprotos.GetTransactionResponse'
        type: array
      count:
        type: integer
      message:
        type: string
    type: object
  genprotos.GetContractResponse:
    properties:
      consumer_address:
        type: string
      consumer_name:
        type: string
      consumer_passport_serial:
        type: string
      consumer_phone_number:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      duration:
        type: integer
      id:
        type: string
      passport_image:
        type: string
      price:
        type: number
      status:
        type: string
    type: object
  genprotos.GetExchangeResponse:
    properties:
      amount:
        type: integer
      contract_id:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      price:
        type: number
      product_id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  genprotos.GetNotificationByidResponse:
    properties:
      contract_id:
        type: string
      created_at:
        type: string
      message:
        type: string
      user_id:
        type: string
    type: object
  genprotos.GetProductResponse:
    properties:
      amount:
        type: integer
      color:
        type: string
      created_at:
        type: string
      date_of_creation:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      image_url:
        type: string
      made_in:
        type: string
      model:
        type: string
      name:
        type: string
      price:
        type: number
      storage_id:
        type: string
      updated_at:
        type: string
    type: object
  genprotos.GetTransactionResponse:
    properties:
      contract_id:
        type: string
      created_at:
        type: string
      duration:
        type: integer
      id:
        type: string
      price:
        type: number
    type: object
  genprotos.ListNotificationResponse:
    properties:
      notifications:
        items:
          $ref: '#/definitions/genprotos.GetNotificationByidResponse'
        type: array
    type: object
  genprotos.ProductResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  genprotos.TransactionResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  genprotos.UpdateContractRequest:
    properties:
      consumer_address:
        type: string
      consumer_name:
        type: string
      consumer_passport_serial:
        type: string
      consumer_phone_number:
        type: string
      duration:
        type: integer
      id:
        type: string
      passport_image:
        type: string
      status:
        type: string
    type: object
  genprotos.UpdateExchangeRequest:
    properties:
      amount:
        type: integer
      contract_id:
        type: string
      id:
        type: string
      price:
        type: number
      product_id:
        type: string
    type: object
  genprotos.UpdateProductRequest:
    properties:
      color:
        type: string
      date_of_creation:
        type: string
      id:
        type: string
      image_url:
        type: string
      made_in:
        type: string
      model:
        type: string
      name:
        type: string
      storage_id:
        type: string
    type: object
  genprotos.UpdateTransactionRequest:
    properties:
      contract_id:
        type: string
      duration:
        type: integer
      id:
        type: string
      price:
        type: number
    type: object
info:
  contact: {}
  description: Dilshod's API Gateway
  title: API Gateway
  version: "1.0"
paths:
  /contract/create:
    post:
      consumes:
      - application/json
      description: Create a new contract
      parameters:
      - description: Contract details
        in: body
        name: contract
        required: true
        schema:
          $ref: '#/definitions/genprotos.CreateContractRequestSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: Contract created successfully
          schema:
            $ref: '#/definitions/genprotos.ContractResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Error while creating contract
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Contract
      tags:
      - Contract
  /contract/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a contract by ID
      parameters:
      - description: Contract ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contract deleted successfully
          schema:
            $ref: '#/definitions/genprotos.ContractResponse'
        "404":
          description: Contract not found
          schema:
            type: string
        "500":
          description: Error while deleting contract
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Contract
      tags:
      - Contract
  /contract/get/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a contract by ID
      parameters:
      - description: Contract ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contract details
          schema:
            $ref: '#/definitions/genprotos.GetContractResponse'
        "404":
          description: Contract not found
          schema:
            type: string
        "500":
          description: Error while retrieving contract
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Contract
      tags:
      - Contract
  /contract/getpdf/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a contract by ID and return it in PDF format
      parameters:
      - description: Contract ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/pdf
      responses:
        "200":
          description: OK
          schema:
            type: file
        "404":
          description: Contract not found
          schema:
            type: string
        "500":
          description: Error while retrieving contract
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Contract
      tags:
      - Contract
  /contract/list:
    get:
      consumes:
      - application/json
      description: Retrieve a list of contracts with optional filters
      parameters:
      - description: Filter by consumer name
        in: query
        name: consumer_name
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by passport seria
        in: query
        name: pasport_seria
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      - description: Offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of contracts
          schema:
            $ref: '#/definitions/genprotos.GetAllContractResponse'
        "500":
          description: Error while retrieving contracts
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List Contracts
      tags:
      - Contract
  /contract/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing contract
      parameters:
      - description: Contract ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated contract details
        in: body
        name: contract
        required: true
        schema:
          $ref: '#/definitions/genprotos.UpdateContractRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Contract updated successfully
          schema:
            $ref: '#/definitions/genprotos.ContractResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Error while updating contract
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Contract
      tags:
      - Contract
  /exchange/create:
    post:
      consumes:
      - application/json
      description: Create a new exchange record with the specified details
      parameters:
      - description: Exchange Status
        enum:
        - buy
        - sell
        in: query
        name: status
        required: true
        type: string
      - description: Exchange details
        in: body
        name: exchange
        required: true
        schema:
          items:
            $ref: '#/definitions/genprotos.CreateExchangeRequestSwagger'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Exchange created successfully
          schema:
            items:
              $ref: '#/definitions/genprotos.ExchangeResponse'
            type: array
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Error while creating exchange
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new Exchange
      tags:
      - Exchange
  /exchange/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific exchange record using its ID
      parameters:
      - description: Exchange ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Exchange deleted successfully
          schema:
            $ref: '#/definitions/genprotos.ExchangeResponse'
        "404":
          description: Exchange not found
          schema:
            type: string
        "500":
          description: Error while deleting exchange
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Exchange by ID
      tags:
      - Exchange
  /exchange/get/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific exchange record using its ID
      parameters:
      - description: Exchange ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Exchange retrieved successfully
          schema:
            $ref: '#/definitions/genprotos.GetExchangeResponse'
        "404":
          description: Exchange not found
          schema:
            type: string
        "500":
          description: Error while retrieving exchange
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Exchange by ID
      tags:
      - Exchange
  /exchange/list:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all exchange records with optional filtering
        by product ID or status
      parameters:
      - description: Product ID
        in: query
        name: product_id
        type: string
      - description: Exchange Status
        enum:
        - buy
        - sell
        in: query
        name: status
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      - description: Offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of exchanges retrieved successfully
          schema:
            $ref: '#/definitions/genprotos.GetAllExchangeResponse'
        "500":
          description: Error while listing exchanges
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List all Exchanges
      tags:
      - Exchange
  /exchange/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing exchange record with new details
      parameters:
      - description: Exchange ID
        in: path
        name: id
        required: true
        type: string
      - description: Exchange details
        in: body
        name: exchange
        required: true
        schema:
          $ref: '#/definitions/genprotos.UpdateExchangeRequest'
      - description: Exchange Status
        enum:
        - buy
        - sell
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Exchange updated successfully
          schema:
            $ref: '#/definitions/genprotos.ExchangeResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Exchange not found
          schema:
            type: string
        "500":
          description: Error while updating exchange
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update an Exchange
      tags:
      - Exchange
  /minio/media:
    post:
      consumes:
      - multipart/form-data
      description: Upload a media file
      parameters:
      - description: UploadMediaForm
        in: formData
        name: file
        required: true
        type: file
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: uploadFile
      tags:
      - media
  /notifications/get:
    get:
      consumes:
      - application/json
      description: Retrieve a notification by user_id
      produces:
      - application/json
      responses:
        "200":
          description: Notification retrieved successfully
          schema:
            $ref: '#/definitions/genprotos.GetNotificationByidResponse'
        "404":
          description: Notification not found
          schema:
            type: string
        "500":
          description: Error while retrieving notification
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Notification
      tags:
      - Notification
  /notifications/getlist:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all notifications
      produces:
      - application/json
      responses:
        "200":
          description: List of notifications retrieved successfully
          schema:
            $ref: '#/definitions/genprotos.ListNotificationResponse'
        "500":
          description: Error while retrieving notifications
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List Notifications
      tags:
      - Notification
  /product/create:
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/genprotos.CreateProductRequestSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: Product created successfully
          schema:
            $ref: '#/definitions/genprotos.ProductResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Error while creating product
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Product
      tags:
      - Product
  /product/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product deleted successfully
          schema:
            $ref: '#/definitions/genprotos.ProductResponse'
        "404":
          description: Product not found
          schema:
            type: string
        "500":
          description: Error while deleting product
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Product
      tags:
      - Product
  /product/get/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product retrieved successfully
          schema:
            $ref: '#/definitions/genprotos.GetProductResponse'
        "404":
          description: Product not found
          schema:
            type: string
        "500":
          description: Error while retrieving product
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Product
      tags:
      - Product
  /product/list:
    get:
      consumes:
      - application/json
      description: Retrieve a list of products with optional filters
      parameters:
      - description: Product Name
        in: query
        name: name
        type: string
      - description: Product Color
        in: query
        name: color
        type: string
      - description: Product Model
        in: query
        name: model
        type: string
      - description: Storage ID
        in: query
        name: storage_id
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      - description: Offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Products retrieved successfully
          schema:
            $ref: '#/definitions/genprotos.GetAllProductResponse'
        "500":
          description: Error while listing products
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List Products
      tags:
      - Product
  /product/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/genprotos.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Product updated successfully
          schema:
            $ref: '#/definitions/genprotos.ProductResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Error while updating product
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Product
      tags:
      - Product
  /transaction/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a transaction record by ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction deleted successfully
          schema:
            $ref: '#/definitions/genprotos.TransactionResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Transaction not found
          schema:
            type: string
        "500":
          description: Error while deleting transaction
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Transaction by ID
      tags:
      - Transaction
    put:
      consumes:
      - application/json
      description: Update an existing transaction record by ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated transaction details
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/genprotos.UpdateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/genprotos.TransactionResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Transaction not found
          schema:
            type: string
        "500":
          description: Error while updating transaction
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Transaction
      tags:
      - Transaction
  /transaction/create:
    post:
      consumes:
      - application/json
      description: Create a new transaction record with the specified details
      parameters:
      - description: Transaction details
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/genprotos.CreateTransactionRequestSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: Transaction created successfully
          schema:
            $ref: '#/definitions/genprotos.TransactionResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Error while creating transaction
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new Transaction
      tags:
      - Transaction
  /transaction/get/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve transaction details by transaction ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction details
          schema:
            $ref: '#/definitions/genprotos.GetTransactionResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Transaction not found
          schema:
            type: string
        "500":
          description: Error while retrieving transaction
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Transaction by ID
      tags:
      - Transaction
  /transaction/list:
    get:
      consumes:
      - application/json
      description: List all transactions, optionally filtered by contract ID
      parameters:
      - description: Contract ID
        in: query
        name: contract_id
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      - description: Offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            $ref: '#/definitions/genprotos.GetAllTransactionResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Error while listing transactions
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List Transactions
      tags:
      - Transaction
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
